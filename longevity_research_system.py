#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –∂–∏–∑–Ω–∏
–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞ –∏ –ø–∞—Ä—Å–µ—Ä–∞ –≤ –µ–¥–∏–Ω—É—é —É–ø—Ä–∞–≤–ª—è–µ–º—É—é —Å–∏—Å—Ç–µ–º—É
"""

import argparse
import json
import sys
import signal
from datetime import datetime
from pathlib import Path
from typing import Dict, List, Optional

from agent_coordinator import AgentCoordinator
from agent_parser import AgentParser


class LongevityResearchSystem:
    """–ì–ª–∞–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º PubMed"""
    
    def __init__(self, config_path: str = "longevity_config.json",
                 db_path: str = "longevity_research.db",
                 pdf_dir: str = "longevity_pdfs",
                 email: str = None,
                 api_key: str = None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
        
        Args:
            config_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            db_path: –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            pdf_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è PDF —Ñ–∞–π–ª–æ–≤
            email: Email –¥–ª—è PubMed API
            api_key: API –∫–ª—é—á PubMed
        """
        self.config_path = config_path
        self.db_path = db_path
        self.pdf_dir = pdf_dir
        self.email = email
        self.api_key = api_key
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã
        print("üß¨ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–æ–ª–≥–æ–ª–µ—Ç–∏—è...")
        
        self.coordinator = AgentCoordinator(db_path=db_path, config_path=config_path)
        self.parser = AgentParser(
            coordinator=self.coordinator,
            email=email,
            api_key=api_key,
            pdf_dir=pdf_dir
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown
        signal.signal(signal.SIGINT, self._signal_handler)
        signal.signal(signal.SIGTERM, self._signal_handler)
        
        self.running = True
        
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    
    def _signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        print(f"\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
        self.running = False
    
    def run_research_session(self, 
                           max_queries: int = 50,
                           download_pdfs: bool = True,
                           target_articles_per_theme: int = None,
                           session_name: str = None) -> Dict:
        """
        –ó–∞–ø—É—Å–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏
        
        Args:
            max_queries: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
            download_pdfs: –°–∫–∞—á–∏–≤–∞—Ç—å –ª–∏ PDF —Ñ–∞–π–ª—ã
            target_articles_per_theme: –¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –Ω–∞ —Ç–µ–º—É
            session_name: –ò–º—è —Å–µ—Å—Å–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            
        Returns:
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏
        """
        if session_name:
            print(f"üéØ –ó–∞–ø—É—Å–∫ —Å–µ—Å—Å–∏–∏: {session_name}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã
        if target_articles_per_theme:
            self.coordinator.config["search_settings"]["min_articles_per_theme"] = target_articles_per_theme
        
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Å—Å–∏–∏:")
        print(f"   –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤: {max_queries}")
        print(f"   –ó–∞–≥—Ä—É–∑–∫–∞ PDF: {'–í–ö–õ' if download_pdfs else '–í–´–ö–õ'}")
        print(f"   –¶–µ–ª—å —Å—Ç–∞—Ç–µ–π –Ω–∞ —Ç–µ–º—É: {target_articles_per_theme or '–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ç–µ–º–∞–º
        self._show_themes_progress()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —Å–µ—Å—Å–∏—é –ø–∞—Ä—Å–µ—Ä–∞
        try:
            stats = self.parser.run_autonomous_session(
                max_queries=max_queries,
                download_pdfs=download_pdfs
            )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            self._show_session_summary(stats)
            
            return stats
            
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏: {e}")
            return {'error': str(e)}
        
        finally:
            self.coordinator.close_session()
    
    def run_interactive_mode(self):
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π"""
        print("\nüéÆ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú –£–ü–†–ê–í–õ–ï–ù–ò–Ø")
        print("=" * 50)
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  1. start - –ó–∞–ø—É—Å–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏")
        print("  2. status - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
        print("  3. themes - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ç–µ–º–∞–º")
        print("  4. recommendations - –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        print("  5. pdfs - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö PDF")
        print("  6. config - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
        print("  7. export - –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        print("  8. cleanup - –û—á–∏—Å—Ç–∫–∞ –±–∏—Ç—ã—Ö PDF")
        print("  9. help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
        print("  0. exit - –í—ã—Ö–æ–¥")
        
        while self.running:
            try:
                command = input("\nü§ñ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ").strip().lower()
                
                if command in ['0', 'exit', 'quit']:
                    break
                elif command in ['1', 'start']:
                    self._interactive_start_session()
                elif command in ['2', 'status']:
                    self._show_system_status()
                elif command in ['3', 'themes']:
                    self._show_themes_progress()
                elif command in ['4', 'recommendations']:
                    self._show_recommendations()
                elif command in ['5', 'pdfs']:
                    self._show_pdfs_info()
                elif command in ['6', 'config']:
                    self._show_config()
                elif command in ['7', 'export']:
                    self._export_results()
                elif command in ['8', 'cleanup']:
                    self._cleanup_pdfs()
                elif command in ['9', 'help']:
                    self._show_help()
                else:
                    print("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.")
                    
            except KeyboardInterrupt:
                print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞")
                break
            except EOFError:
                break
        
        print("üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã...")
        self.coordinator.close_session()
    
    def _interactive_start_session(self):
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Å—Å–∏–∏"""
        try:
            max_queries = int(input("–ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20): ") or "20")
            download_pdfs = input("–°–∫–∞—á–∏–≤–∞—Ç—å PDF? (y/n, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é y): ").lower() != 'n'
            target_articles = input("–¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –Ω–∞ —Ç–µ–º—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20): ")
            target_articles = int(target_articles) if target_articles else None
            session_name = input("–ò–º—è —Å–µ—Å—Å–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ") or None
            
            self.run_research_session(
                max_queries=max_queries,
                download_pdfs=download_pdfs,
                target_articles_per_theme=target_articles,
                session_name=session_name
            )
        except ValueError:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Å—Å–∏–∏: {e}")
    
    def _show_system_status(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´")
        print("=" * 30)
        
        stats = self.coordinator.get_session_stats()
        print(f"ID —Å–µ—Å—Å–∏–∏: {stats['session_id']}")
        print(f"–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {stats['runtime']}")
        print(f"–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['total_queries']}")
        print(f"–ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {stats['total_articles']}")
        print(f"–°–∫–∞—á–∞–Ω–æ PDF: {stats['total_pdfs']}")
        print(f"–£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['completed_queries']}")
        print(f"–ù–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['failed_queries']}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–º–∞–º
        if stats['themes']:
            print("\nüìö –ü–æ —Ç–µ–º–∞–º:")
            for theme, theme_stats in stats['themes'].items():
                print(f"  {theme}: {theme_stats['queries']} –∑–∞–ø—Ä–æ—Å–æ–≤, {theme_stats['articles']} —Å—Ç–∞—Ç–µ–π")
    
    def _show_themes_progress(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ç–µ–º–∞–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
        print("\nüî¨ –ü–†–û–ì–†–ï–°–° –ü–û –¢–ï–ú–ê–ú –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø")
        print("=" * 40)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –æ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞
        themes_progress = self.coordinator._get_themes_progress()
        target = self.coordinator.config["search_settings"]["min_articles_per_theme"]
        
        for theme, progress in themes_progress.items():
            articles = progress['total_articles']
            completion = min(100, (articles / target) * 100) if target > 0 else 0
            status = "‚úÖ" if articles >= target else "üîÑ"
            
            print(f"{status} {theme.replace('_', ' ').title()}")
            print(f"   –°—Ç–∞—Ç–µ–π: {articles}/{target} ({completion:.1f}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ)")
            
            # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            bar_length = 20
            filled = int((completion / 100) * bar_length)
            bar = "‚ñà" * filled + "‚ñë" * (bar_length - filled)
            print(f"   [{bar}] {completion:.1f}%")
            print()
    
    def _show_recommendations(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –°–ò–°–¢–ï–ú–´")
        print("=" * 30)
        
        recommendations = self.coordinator.get_research_recommendations()
        
        if not recommendations:
            print("üéâ –í—Å–µ —Ç–µ–∫—É—â–∏–µ —Ü–µ–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ.")
            return
        
        for i, rec in enumerate(recommendations, 1):
            print(f"{i}. {rec['type'].replace('_', ' ').title()}")
            print(f"   –¢–µ–º–∞: {rec['theme'].replace('_', ' ').title()}")
            print(f"   –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {rec['priority'].upper()}")
            
            if rec['type'] == 'underresearched_theme':
                print(f"   –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {rec['current_articles']}/{rec['target_articles']} —Å—Ç–∞—Ç–µ–π")
            elif rec['type'] == 'expand_productive_theme':
                print(f"   –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {rec['avg_articles_per_query']:.1f} —Å—Ç–∞—Ç–µ–π –Ω–∞ –∑–∞–ø—Ä–æ—Å")
            print()
    
    def _show_pdfs_info(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö PDF"""
        print("\nüìÅ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ö–ê–ß–ê–ù–ù–´–• PDF")
        print("=" * 35)
        
        pdf_info = self.parser.get_downloaded_pdfs_info()
        
        if not pdf_info:
            print("üì≠ PDF —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–µ–º–∞–º
        themes = {}
        total_size = 0
        
        for info in pdf_info:
            theme = info['theme']
            if theme not in themes:
                themes[theme] = {'count': 0, 'size': 0, 'files': []}
            themes[theme]['count'] += 1
            themes[theme]['size'] += info['size_mb']
            themes[theme]['files'].append(info)
            total_size += info['size_mb']
        
        print(f"üìä –í—Å–µ–≥–æ PDF: {len(pdf_info)} —Ñ–∞–π–ª–æ–≤, {total_size:.1f} MB")
        print()
        
        for theme, data in themes.items():
            print(f"üìÇ {theme.replace('_', ' ').title()}")
            print(f"   –§–∞–π–ª–æ–≤: {data['count']}, –†–∞–∑–º–µ—Ä: {data['size']:.1f} MB")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Ñ–∞–π–ª–∞
            for file_info in data['files'][:3]:
                filename = file_info['filename'][:60] + "..." if len(file_info['filename']) > 60 else file_info['filename']
                print(f"   - {filename} ({file_info['size_mb']:.1f} MB)")
            
            if len(data['files']) > 3:
                print(f"   ... –∏ –µ—â–µ {len(data['files']) - 3} —Ñ–∞–π–ª–æ–≤")
            print()
    
    def _show_config(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã"""
        print("\n‚öôÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´")
        print("=" * 30)
        
        config = self.coordinator.config
        
        print(f"üìã –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   –ú–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å: {config['search_settings']['max_results_per_query']}")
        print(f"   –î–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç: {config['search_settings']['date_range_years']} –ª–µ—Ç")
        print(f"   –ú–∏–Ω–∏–º—É–º —Å—Ç–∞—Ç–µ–π –Ω–∞ —Ç–µ–º—É: {config['search_settings']['min_articles_per_theme']}")
        print(f"   –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Å–µ—Å—Å–∏—é: {config['search_settings']['max_queries_per_session']}")
        
        print(f"\nüéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:")
        for priority, value in config['priorities'].items():
            print(f"   {priority.replace('_', ' ').title()}: {value}")
        
        print(f"\nüî¨ –¢–µ–º—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è ({len(config['research_themes'])}):")
        for theme in config['research_themes']:
            queries_count = len(config['query_templates'].get(theme, []))
            print(f"   - {theme.replace('_', ' ').title()} ({queries_count} —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤)")
    
    def _export_results(self):
        """–≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
        print("\nüì§ –≠–ö–°–ü–û–†–¢ –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
        print("=" * 25)
        
        try:
            format_choice = input("–§–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ (json/csv/both, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é both): ").lower() or "both"
            filename_base = input("–ë–∞–∑–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é longevity_export): ") or "longevity_export"
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
            import sqlite3
            
            with sqlite3.connect(self.coordinator.db_path) as conn:
                cursor = conn.cursor()
                
                # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å–∏
                cursor.execute('''
                    SELECT a.pmid, a.title, a.authors, a.journal, a.publication_date,
                           a.doi, a.abstract, a.keywords, q.theme, q.query_text
                    FROM articles a
                    JOIN queries q ON a.query_id = q.id
                    ORDER BY a.timestamp DESC
                ''')
                
                articles_data = []
                for row in cursor.fetchall():
                    articles_data.append({
                        'pmid': row[0],
                        'title': row[1],
                        'authors': json.loads(row[2]) if row[2] else [],
                        'journal': row[3],
                        'publication_date': row[4],
                        'doi': row[5],
                        'abstract': row[6],
                        'keywords': json.loads(row[7]) if row[7] else [],
                        'theme': row[8],
                        'query': row[9]
                    })
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            
            if format_choice in ['json', 'both']:
                json_file = f"{filename_base}_{timestamp}.json"
                json_file = f"output/{json_file}"  # Ensure JSON files are saved in the 'output' directory
                with open(json_file, 'w', encoding='utf-8') as f:
                    json.dump(articles_data, f, ensure_ascii=False, indent=2)
                print(f"‚úÖ JSON —ç–∫—Å–ø–æ—Ä—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {json_file}")
            
            if format_choice in ['csv', 'both']:
                csv_file = f"{filename_base}_{timestamp}.csv"
                csv_file = f"output/{csv_file}"  # Ensure CSV files are saved in the 'output' directory
                import csv
                
                if articles_data:
                    with open(csv_file, 'w', newline='', encoding='utf-8') as f:
                        writer = csv.DictWriter(f, fieldnames=articles_data[0].keys())
                        writer.writeheader()
                        
                        for article in articles_data:
                            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–∫–∏ –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è CSV
                            csv_article = article.copy()
                            csv_article['authors'] = '; '.join(article['authors'])
                            csv_article['keywords'] = '; '.join(article['keywords'])
                            writer.writerow(csv_article)
                    
                    print(f"‚úÖ CSV —ç–∫—Å–ø–æ—Ä—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {csv_file}")
            
            print(f"üìä –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(articles_data)} —Å—Ç–∞—Ç–µ–π")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {e}")
    
    def _cleanup_pdfs(self):
        """–û—á–∏—Å—Ç–∫–∞ –±–∏—Ç—ã—Ö PDF —Ñ–∞–π–ª–æ–≤"""
        print("\nüßπ –û–ß–ò–°–¢–ö–ê PDF –§–ê–ô–õ–û–í")
        print("=" * 25)
        
        cleaned = self.parser.cleanup_failed_downloads()
        if cleaned == 0:
            print("‚ú® –í—Å–µ PDF —Ñ–∞–π–ª—ã –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏")
        else:
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {cleaned} –±–∏—Ç—ã—Ö PDF —Ñ–∞–π–ª–æ–≤")
    
    def _show_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
        print("\n‚ùì –°–ü–†–ê–í–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–ú")
        print("=" * 25)
        
        commands = {
            'start': '–ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏',
            'status': '–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã',
            'themes': '–ü—Ä–æ–≥—Ä–µ—Å—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–º–∞–º',
            'recommendations': '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è',
            'pdfs': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö PDF —Ñ–∞–π–ª–∞—Ö',
            'config': '–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã',
            'export': '–≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ JSON/CSV',
            'cleanup': '–û—á–∏—Å—Ç–∫–∞ –±–∏—Ç—ã—Ö PDF —Ñ–∞–π–ª–æ–≤',
            'exit': '–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã'
        }
        
        for cmd, desc in commands.items():
            print(f"  {cmd:<15} - {desc}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
    parser = argparse.ArgumentParser(
        description="–ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–æ–ª–≥–æ–ª–µ—Ç–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ PubMed",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python longevity_research_system.py --interactive
  python longevity_research_system.py --queries 50 --pdf
  python longevity_research_system.py --email your@email.com --api-key YOUR_KEY
        """
    )
    
    parser.add_argument('--email', help='Email –¥–ª—è PubMed API')
    parser.add_argument('--api-key', help='API –∫–ª—é—á –¥–ª—è PubMed')
    parser.add_argument('--interactive', action='store_true', help='–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º')
    parser.add_argument('--queries', type=int, default=20, help='–ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20)')
    parser.add_argument('--no-pdf', action='store_true', help='–ù–µ —Å–∫–∞—á–∏–≤–∞—Ç—å PDF —Ñ–∞–π–ª—ã')
    parser.add_argument('--target-articles', type=int, help='–¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –Ω–∞ —Ç–µ–º—É')
    parser.add_argument('--session-name', help='–ò–º—è —Å–µ—Å—Å–∏–∏')
    parser.add_argument('--config', default='longevity_config.json', help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')
    parser.add_argument('--db', default='longevity_research.db', help='–ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
    parser.add_argument('--pdf-dir', default='longevity_pdfs', help='–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è PDF —Ñ–∞–π–ª–æ–≤')
    
    args = parser.parse_args()
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É
        system = LongevityResearchSystem(
            config_path=args.config,
            db_path=args.db,
            pdf_dir=args.pdf_dir,
            email=args.email,
            api_key=args.api_key
        )
        
        if args.interactive:
            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
            system.run_interactive_mode()
        else:
            # –†–µ–∂–∏–º –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            system.run_research_session(
                max_queries=args.queries,
                download_pdfs=not args.no_pdf,
                target_articles_per_theme=args.target_articles,
                session_name=args.session_name
            )
    
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()